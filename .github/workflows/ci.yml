name: CI for Collaboration Service

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    env:
      SPRING_RABBITMQ_HOST: ${{ secrets.SPRING_RABBITMQ_HOST }}
      SPRING_RABBITMQ_PORT: ${{ secrets.SPRING_RABBITMQ_PORT }}
      SPRING_RABBITMQ_USERNAME: ${{ secrets.SPRING_RABBITMQ_USERNAME }}
      SPRING_RABBITMQ_PASSWORD: ${{ secrets.SPRING_RABBITMQ_PASSWORD }}
      AUTH0_ISSUER_URI: ${{ secrets.AUTH0_ISSUER_URI }}
      AUTH0_JWKS_URI: ${{ secrets.AUTH0_JWKS_URI }}
      COLLAB_DATASOURCE_URL: ${{ secrets.COLLAB_DATASOURCE_URL }}
      COLLAB_DATASOURCE_USERNAME: ${{ secrets.COLLAB_DATASOURCE_USERNAME }}
      COLLAB_DATASOURCE_PASSWORD: ${{ secrets.COLLAB_DATASOURCE_PASSWORD }}
      ENCRYPTION_KEY: ${{ secrets.ENCRYPTION_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Grant execute permission for Gradle wrapper
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: Generate JaCoCo test report
        run: ./gradlew jacocoTestReport

      - name: Debug JaCoCo output paths
        run: find build -type f

      - name: List all files for debugging
        run: find . -type f

  integration-test:
    runs-on: ubuntu-latest
    needs: build-and-test

    env:
      SPRING_RABBITMQ_HOST: ${{ secrets.SPRING_RABBITMQ_HOST }}
      SPRING_RABBITMQ_PORT: ${{ secrets.SPRING_RABBITMQ_PORT }}
      SPRING_RABBITMQ_USERNAME: ${{ secrets.SPRING_RABBITMQ_USERNAME }}
      SPRING_RABBITMQ_PASSWORD: ${{ secrets.SPRING_RABBITMQ_PASSWORD }}
      AUTH0_ISSUER_URI: ${{ secrets.AUTH0_ISSUER_URI }}
      AUTH0_JWKS_URI: ${{ secrets.AUTH0_JWKS_URI }}
      COLLAB_DATASOURCE_URL: ${{ secrets.COLLAB_DATASOURCE_URL }}
      COLLAB_DATASOURCE_USERNAME: ${{ secrets.COLLAB_DATASOURCE_USERNAME }}
      COLLAB_DATASOURCE_PASSWORD: ${{ secrets.COLLAB_DATASOURCE_PASSWORD }}
      ENCRYPTION_KEY: ${{ secrets.ENCRYPTION_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for Gradle wrapper
        run: chmod +x ./gradlew

      - name: Start Spring Boot app in background
        run: ./gradlew bootRun &

      - name: Wait for app to be ready
        run: |
          echo "Waiting for app to start on port 8083..."
          for i in {1..30}; do
            nc -z localhost 8083 && echo "App is up!" && break
            sleep 2
          done

      - name: Run integration tests
        run: ./gradlew integrationTest

      - name: Stop Spring Boot app
        if: always()
        run: pkill -f 'org.springframework.boot.loader.JarLauncher' || true

  gitleaks:
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    steps:
      - uses: actions/checkout@v3
      - name: Run Gitleaks to detect secrets
        uses: gitleaks/gitleaks-action@v2
        continue-on-error: true
        with:
          args: detect --redact -v --report-format=sarif --report-path=results.sarif
      - name: Upload Gitleaks SARIF to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: results.sarif

  semgrep-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run Semgrep
        uses: returntocorp/semgrep-action@v1
        with:
          config: "auto"

  dependency-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run OWASP Dependency-Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: "Collaboration Service"
          path: "."
          format: "HTML"
          out: "dependency-check-report"

      - name: Upload Dependency-Check report
        uses: actions/upload-artifact@v4
        with:
          name: dependency-check-report
          path: dependency-check-report

  build-and-push-unscanned-image:
    name: Build and Push Unscanned Image
    runs-on: ubuntu-latest
    needs: build-and-test

    permissions:
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Grant execute permission for Gradle wrapper
        run: chmod +x ./gradlew

      - name: Build JAR for Docker packaging
        run: ./gradlew bootJar

      - name: Verify JAR presence
        run: |
          echo "Listing contents of build/libs:"
          ls -lh build/libs/
          find build/libs/ -name "*.jar" -print -quit || { echo "JAR not found!"; exit 1; }

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image (unscanned version)
        run: docker build -t collab-service:unscanned .

      - name: Tag image for Docker Hub push
        run: docker tag collab-service:unscanned ${{ secrets.DOCKERHUB_USERNAME }}/collab-service:unscanned

      - name: Push unscanned image to Docker Hub
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/collab-service:unscanned

  zap-scan:
    name: OWASP ZAP Scan
    runs-on: ubuntu-latest
    needs: build-and-push-unscanned-image
    timeout-minutes: 15

    permissions:
      contents: read
      issues: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Pull unscanned Docker image
        run: docker pull ${{ secrets.DOCKERHUB_USERNAME }}/collab-service:unscanned

      - name: Tag image for local use
        run: docker tag ${{ secrets.DOCKERHUB_USERNAME }}/collab-service:unscanned collab-service:local-scan

      - name: Start backend with Docker Compose
        run: |
          docker compose -f src/docker-compose.yml up -d
          sleep 30

      - name: Wait for health endpoint to be ready
        run: |
          echo "Waiting for health endpoint..."
          for i in `seq 1 30`; do
            STATUS_CODE=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:8083/api/public/test)
            if [ "$STATUS_CODE" -eq 200 ]; then
              echo "Health check passed."
              break
            else
              echo "Attempt $i: Got $STATUS_CODE. Retrying..."
              sleep 5
            fi
            if [ $i -eq 30 ]; then
              echo "Timeout waiting for health endpoint."
              exit 1
            fi
          done

      - name: Prepare directory permissions for ZAP
        run: sudo chmod -R 777 .

      - name: Run OWASP ZAP Baseline Scan
        uses: zaproxy/action-baseline@v0.14.0
        with:
          target: http://localhost:8083
          fail_action: false

      - name: Upload ZAP Scan Report
        uses: actions/upload-artifact@v4
        with:
          name: zap-report
          path: |
            zap_report.html
            zap_report.json
        continue-on-error: true

      - name: Tear down Docker Compose services
        if: always()
        run: docker compose -f src/docker-compose.yml down
