##spring.datasource.url=jdbc:mysql://localhost:3306/dimotion_collaboration_db
#spring.datasource.username=root
#spring.datasource.password=pass
#
#spring.jpa.hibernate.ddl-auto=create-drop
#spring.jpa.show-sql=true
#
## RabbitMQ
##spring.rabbitmq.host=rabbitmq
#spring.rabbitmq.port=5672
#spring.rabbitmq.username=guest
#spring.rabbitmq.password=guest
#
## This works when running the app locally on your machine
#spring.rabbitmq.host=localhost
#
## === Auth0 ===
#spring.security.oauth2.resourceserver.jwt.issuer-uri=https://dev-7yhqcaufq4sp5ujx.us.auth0.com/
#spring.security.oauth2.resourceserver.jwt.jwk-set-uri=https://dev-7yhqcaufq4sp5ujx.us.auth0.com/.well-known/jwks.json
#
## Enable detailed security logs
##logging.level.org.springframework.security=DEBUG
##logging.level.org.springframework.security.oauth2=DEBUG
#
#server.port=8081

# for docker compose usage
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}

spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=true

spring.rabbitmq.host=${SPRING_RABBITMQ_HOST}
spring.rabbitmq.port=${SPRING_RABBITMQ_PORT}
spring.rabbitmq.username=${SPRING_RABBITMQ_USERNAME}
spring.rabbitmq.password=${SPRING_RABBITMQ_PASSWORD}

spring.security.oauth2.resourceserver.jwt.issuer-uri=${AUTH0_ISSUER_URI}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${AUTH0_JWKS_URI}

server.port=8080
server.address=0.0.0.0

# === Email encryption ===
encryption.key=${ENCRYPTION_KEY}
